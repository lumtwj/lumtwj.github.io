{"version":3,"sources":["assets/me.jpg","widgets/SocialButtons.js","sections/Skills.js","widgets/ProjectItem.js","sections/Projects.js","sections/Contact.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["SocialButtons","useState","hoverId","setHoverId","onMouseEnter","id","onMouseLeave","getButtonColor","spacing","as","onClick","window","open","boxSize","ImFacebook2","color","ImGithub","ImInstagram","ImLinkedin","ImTwitter","Skills","bg","p","size","pb","pt","ProjectItem","children","title","imageSrc","imageAlt","description","maxW","borderWidth","borderRadius","overflow","mt","fontWeight","lineHeight","isTruncated","Projects","colorScheme","variant","Contact","forwardRef","props","ref","name","setName","email","setEmail","message","setMessage","toast","useToast","direction","w","mb","onChange","event","target","value","placeholder","isDisabled","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","ok","status","position","isClosable","App","showAvatar","setShowAvatar","showHeader","setShowHeader","showSubHeader","setShowSubHeader","showSocialButtons","setShowSocialButtons","showContactButton","setShowContactButton","showContent","setShowContent","contactRef","useRef","useEffect","setTimeout","theme","h","px","py","initialScale","in","src","me","current","scrollIntoView","behavior","block","overflowY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.6baa920c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/me.cbff1c60.jpg\";","import React, { useState } from 'react';\r\nimport {\r\n    HStack,\r\n    Icon,\r\n    Box\r\n} from '@chakra-ui/react';\r\nimport { ImFacebook2, ImGithub, ImInstagram, ImLinkedin, ImTwitter } from \"react-icons/im\";\r\n\r\nfunction SocialButtons() {\r\n    const FACEBOOK = 0;\r\n    const GITHUB = 1;\r\n    const INSTAGRAM = 2;\r\n    const LINKEDIN = 3;\r\n    const TWITTER = 4;\r\n\r\n    const [hoverId, setHoverId] = useState(-1);\r\n\r\n    const onMouseEnter = (id) => {\r\n        setHoverId(id);\r\n    };\r\n\r\n    const onMouseLeave = () => {\r\n        setHoverId(-1);\r\n    };\r\n\r\n    const getButtonColor = (id) => {\r\n        if (hoverId === id || hoverId === -1) {\r\n            return 'black';\r\n        }\r\n\r\n        return 'gray.400';\r\n    }\r\n\r\n    return <HStack spacing=\"20px\">\r\n        <Box as=\"button\" onClick={() => window.open(\"https://facebook.com/lumtwj\", \"_blank\")}>\r\n            <Icon\r\n                boxSize=\"2em\"\r\n                as={ImFacebook2}\r\n                onMouseEnter={() => onMouseEnter(FACEBOOK)}\r\n                onMouseLeave={onMouseLeave}\r\n                color={getButtonColor(FACEBOOK)} />\r\n        </Box>\r\n        <Box as=\"button\" onClick={() => window.open(\"https://github.com/lumtwj\", \"_blank\")}>\r\n            <Icon\r\n                boxSize=\"2em\"\r\n                as={ImGithub}\r\n                onMouseEnter={() => onMouseEnter(GITHUB)}\r\n                onMouseLeave={onMouseLeave}\r\n                color={getButtonColor(GITHUB)} />\r\n        </Box>\r\n        <Box as=\"button\" onClick={() => window.open(\"https://instagram.com/lumtwj\", \"_blank\")}>\r\n            <Icon\r\n                boxSize=\"2em\"\r\n                as={ImInstagram}\r\n                onMouseEnter={() => onMouseEnter(INSTAGRAM)}\r\n                onMouseLeave={onMouseLeave}\r\n                color={getButtonColor(INSTAGRAM)} />\r\n        </Box>\r\n        <Box as=\"button\" onClick={() => window.open(\"https://www.linkedin.com/in/joelum\", \"_blank\")}>\r\n            <Icon\r\n                boxSize=\"2em\" as={ImLinkedin}\r\n                onMouseEnter={() => onMouseEnter(LINKEDIN)}\r\n                onMouseLeave={onMouseLeave}\r\n                color={getButtonColor(LINKEDIN)} />\r\n        </Box>\r\n        <Box as=\"button\" onClick={() => window.open(\"https://twitter.com/lumtwj\", \"_blank\")}>\r\n            <Icon\r\n                boxSize=\"2em\"\r\n                as={ImTwitter}\r\n                onMouseEnter={() => onMouseEnter(TWITTER)}\r\n                onMouseLeave={onMouseLeave}\r\n                color={getButtonColor(TWITTER)} />\r\n        </Box>\r\n    </HStack>;\r\n}\r\n\r\nexport default SocialButtons;","import React from 'react';\r\nimport {\r\n    Box,\r\n    Heading,\r\n    Wrap,\r\n    WrapItem,\r\n    Tag,\r\n} from '@chakra-ui/react';\r\n\r\nfunction Skills() {\r\n    return <Box bg=\"teal.200\" p={20}>\r\n        <Heading as=\"h2\" size=\"xl\" pb={7}>Skills</Heading>\r\n        <Heading as=\"h4\" size=\"md\" pb={3}>Languages</Heading>\r\n        <Wrap>\r\n            <WrapItem>\r\n                <Tag>Dart</Tag>\r\n            </WrapItem>\r\n            <WrapItem>\r\n                <Tag>Java</Tag>\r\n            </WrapItem>\r\n            <WrapItem>\r\n                <Tag>JavaScript</Tag>\r\n            </WrapItem>\r\n            <WrapItem>\r\n                <Tag>Python</Tag>\r\n            </WrapItem>\r\n        </Wrap>\r\n        <Heading as=\"h4\" size=\"md\" pt={3} pb={3}>Framework</Heading>\r\n        <Wrap>\r\n            <WrapItem>\r\n                <Tag>Django</Tag>\r\n            </WrapItem>\r\n            <WrapItem>\r\n                <Tag>Flutter</Tag>\r\n            </WrapItem>\r\n            <WrapItem>\r\n                <Tag>React</Tag>\r\n            </WrapItem>\r\n            <WrapItem>\r\n                <Tag>React Native</Tag>\r\n            </WrapItem>\r\n            <WrapItem>\r\n                <Tag>Serverless</Tag>\r\n            </WrapItem>\r\n        </Wrap>\r\n        <Heading as=\"h4\" size=\"md\" pt={3} pb={3}>Databases</Heading>\r\n        <Wrap>\r\n            <WrapItem>\r\n                <Tag>Firestore</Tag>\r\n            </WrapItem>\r\n            <WrapItem>\r\n                <Tag>MongoDB</Tag>\r\n            </WrapItem>\r\n            <WrapItem>\r\n                <Tag>MySQL</Tag>\r\n            </WrapItem>\r\n            <WrapItem>\r\n                <Tag>Neo4J</Tag>\r\n            </WrapItem>\r\n            <WrapItem>\r\n                <Tag>PostgreSQL</Tag>\r\n            </WrapItem>\r\n        </Wrap>\r\n        <Heading as=\"h4\" size=\"md\" pt={3} pb={3}>Cloud</Heading>\r\n        <Wrap>\r\n            <WrapItem>\r\n                <Tag>Amazon Web Service (AWS)</Tag>\r\n            </WrapItem>\r\n            <WrapItem>\r\n                <Tag>Google Cloud Platform (GCP)</Tag>\r\n            </WrapItem>\r\n        </Wrap>\r\n    </Box>\r\n}\r\n\r\nexport default Skills;","import React from 'react';\r\nimport {\r\n    Box,\r\n    // Image\r\n} from '@chakra-ui/react';\r\n\r\nfunction ProjectItem({ children, imageSrc, imageAlt, title, description }) {\r\n\r\n    return <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" bg=\"white\">\r\n        {/* <Image src={imageSrc} alt={imageAlt} /> */}\r\n        <Box maxW=\"800px\" p=\"6\">\r\n            <Box\r\n                mt=\"1\"\r\n                fontWeight=\"semibold\"\r\n                as=\"h4\"\r\n                lineHeight=\"tight\"\r\n                isTruncated>\r\n                {title}\r\n            </Box>\r\n            <Box>\r\n                {description}\r\n            </Box>\r\n            <Box pt={5}>\r\n                {children}\r\n            </Box>\r\n        </Box>\r\n    </Box>\r\n}\r\n\r\nexport default ProjectItem;","import React from 'react';\r\nimport {\r\n    Box,\r\n    Heading,\r\n    Button,\r\n    Wrap,\r\n    WrapItem\r\n} from '@chakra-ui/react';\r\nimport ProjectItem from '../widgets/ProjectItem';\r\n// import WhereGotTimeBanner from '../assets/where_got_time.png'\r\n\r\nfunction Projects() {\r\n    return <Box bg=\"orange.200\" p={20}>\r\n        <Heading as=\"h2\" size=\"xl\" pb={7}>Projects</Heading>\r\n        <Wrap spacing={10}>\r\n            <WrapItem>\r\n                <ProjectItem\r\n                    imageSrc=\"https://bit.ly/2Z4KKcF\"\r\n                    imageAlt=\"lumtw.com\"\r\n                    title=\"LUMTW.COM\"\r\n                    description=\"A website written in React to introduce myself to the world. Inspired by Hugo Uilite theme that I previously used.\">\r\n                    <Button colorScheme=\"blue\" variant=\"link\" onClick={() => window.open(\"https://github.com/uicardioHQ/hugo-uilite\", \"_blank\")}>\r\n                        More Details\r\n                    </Button>\r\n                </ProjectItem>\r\n            </WrapItem>\r\n            <WrapItem>\r\n                <ProjectItem\r\n                    imageSrc=\"https://bit.ly/2Z4KKcF\"\r\n                    imageAlt=\"Crypto PI\"\r\n                    title=\"CRYPTO-PI\"\r\n                    description=\"A python script which periodically retrieves cryptocurrency chart and displays it on a Raspberry Pi e-ink display.\">\r\n                    <Button colorScheme=\"blue\" variant=\"link\" onClick={() => window.open(\"https://github.com/lumtwj/crypto-pi\", \"_blank\")}>\r\n                        More Details\r\n                    </Button>\r\n                </ProjectItem>\r\n            </WrapItem>\r\n            <WrapItem>\r\n                <ProjectItem\r\n                    imageSrc=\"https://bit.ly/2Z4KKcF\"\r\n                    imageAlt=\"Parkar\"\r\n                    title=\"PARKAR\"\r\n                    description=\"A utility application made for motorists to get information on the nearest EV charging points and parking lots in Singapore.\">\r\n                    <Button colorScheme=\"blue\" variant=\"link\" onClick={() => window.open(\"https://parkar.asia\", \"_blank\")}>\r\n                        More Details\r\n                    </Button>\r\n                </ProjectItem>\r\n            </WrapItem>\r\n            <WrapItem>\r\n                <ProjectItem\r\n                    // imageSrc={WhereGotTimeBanner}\r\n                    imageSrc=\"https://bit.ly/2Z4KKcF\"\r\n                    imageAlt=\"Where got time?\"\r\n                    title=\"WHERE GOT TIME?\"\r\n                    description=\"A countdown application to help full-time National Servicemen (NSF) track the progress in serving their National Service.\"\r\n                >\r\n                    <Button colorScheme=\"blue\" variant=\"link\" onClick={() => window.open(\"https://play.google.com/store/apps/details?id=com.mOcentury.wgt\", \"_blank\")}>\r\n                        More Details\r\n                    </Button>\r\n                </ProjectItem>\r\n\r\n            </WrapItem>\r\n        </Wrap>\r\n\r\n    </Box>;\r\n}\r\n\r\nexport default Projects;","import React, { useState, forwardRef } from 'react';\r\nimport {\r\n    Box,\r\n    Heading,\r\n    Stack,\r\n    Input,\r\n    Textarea,\r\n    Button,\r\n    FormControl,\r\n    FormLabel,\r\n    useToast\r\n} from '@chakra-ui/react';\r\n\r\nconst Contact = forwardRef((props, ref) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const toast = useToast()\r\n\r\n    const handleNameChange = (event) => {\r\n        setName(event.target.value);\r\n    };\r\n\r\n    const handleEmailChange = (event) => {\r\n        setEmail(event.target.value);\r\n    };\r\n\r\n    const handleMessageChange = (event) => {\r\n        setMessage(event.target.value);\r\n    };\r\n\r\n    const submit = () => {\r\n        console.log(name, email, message)\r\n        fetch(\"https://formspree.io/f/xleaodoa\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ name, email, message })\r\n\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                if (data.ok) {\r\n                    toast({\r\n                        title: \"Your message has been sent\",\r\n                        status: \"success\",\r\n                        position: \"bottom-right\",\r\n                        isClosable: true,\r\n                    })\r\n                }\r\n                else {\r\n                    toast({\r\n                        title: \"There are some issues sending your message. Try again in a while.\",\r\n                        status: \"success\",\r\n                        position: \"bottom-right\",\r\n                        isClosable: true,\r\n                    })\r\n                }\r\n            })\r\n    };\r\n\r\n    return <Box ref={ref} bg=\"gray.50\" p={20}>\r\n        <Heading as=\"h2\" size=\"xl\" pb={7}>Contact</Heading>\r\n        <Box maxW=\"800px\">\r\n            <FormControl>\r\n                <Stack pb={2} direction={[\"column\", null, \"row\"]}>\r\n                    <Box w={[\"100%\", null, \"50%\"]}>\r\n                        <FormLabel mb=\"8px\">Name</FormLabel>\r\n                        <Input\r\n                            onChange={handleNameChange}\r\n                            value={name}\r\n                            placeholder=\"Name\"\r\n                            variant=\"filled\"\r\n                            size=\"sm\"\r\n                        />\r\n                    </Box>\r\n                    <Box w={[\"100%\", null, \"50%\"]}>\r\n                        <FormLabel mb=\"8px\">Email</FormLabel>\r\n                        <Input\r\n                            onChange={handleEmailChange}\r\n                            value={email}\r\n                            placeholder=\"Email\"\r\n                            variant=\"filled\"\r\n                            size=\"sm\"\r\n                        />\r\n                    </Box>\r\n                </Stack>\r\n                <FormLabel mb=\"8px\">Message</FormLabel>\r\n                <Textarea\r\n                    mb={5}\r\n                    value={message}\r\n                    onChange={handleMessageChange}\r\n                    placeholder=\"Message\"\r\n                    variant=\"filled\" />\r\n                <Button colorScheme=\"blue\" size=\"md\" isDisabled={name === '' || email === '' || message === ''} onClick={submit}>\r\n                    Submit\r\n                </Button>\r\n            </FormControl>\r\n\r\n        </Box>\r\n\r\n    </Box>;\r\n});\r\n\r\nexport default Contact;","import React, { useState, useEffect, useRef } from 'react';\nimport {\n  ChakraProvider,\n  Box,\n  Text,\n  Stack,\n  Center,\n  Avatar,\n  Heading,\n  Tag,\n  Button,\n  ScaleFade,\n  theme,\n} from '@chakra-ui/react';\n// import { ColorModeSwitcher } from './ColorModeSwitcher';\nimport me from './assets/me.jpg';\nimport SocialButtons from './widgets/SocialButtons';\nimport Skills from './sections/Skills';\nimport Projects from './sections/Projects';\nimport Contact from './sections/Contact';\n\nfunction App() {\n  const [showAvatar, setShowAvatar] = useState(false);\n  const [showHeader, setShowHeader] = useState(false);\n  const [showSubHeader, setShowSubHeader] = useState(false);\n  const [showSocialButtons, setShowSocialButtons] = useState(false);\n  const [showContactButton, setShowContactButton] = useState(false);\n  const [showContent, setShowContent] = useState(false);\n\n  const contactRef = useRef();\n\n  useEffect(() => {\n    setTimeout(() => setShowAvatar(true), 0);\n    setTimeout(() => setShowHeader(true), 500);\n    setTimeout(() => setShowSubHeader(true), 1000);\n    setTimeout(() => setShowContactButton(true), 1500);\n    setTimeout(() => setShowSocialButtons(true), 2000);\n    setTimeout(() => setShowContent(true), 2500);\n  }, []);\n\n  return (\n    <ChakraProvider theme={theme}>\n      <Stack direction={[\"column\", \"column\", \"row\"]}>\n        <Center h={[null, null, \"100vh\"]} w={[\"100%\", \"100%\", \"40%\"]}>\n          <Box px={12} py={10}>\n            <ScaleFade initialScale={0.9} in={showAvatar}>\n              <Avatar size=\"2xl\" src={me} />\n            </ScaleFade>\n            <ScaleFade initialScale={0.9} in={showHeader}>\n              <Heading size=\"xl\" pt={10} pb={5}>HEY WORLD, I'M <Tag size=\"xl\" fontWeight=\"bold\" px={3}>JOE LUM</Tag></Heading>\n            </ScaleFade>\n            <ScaleFade initialScale={0.9} in={showSubHeader}>\n              <Text size=\"md\" pb={10}>A software developer who is based in Singapore. I believe that writing apps can help to simplify repetitive tasks and makes the world a better place to be in.</Text>\n            </ScaleFade>\n            <ScaleFade initialScale={0.9} in={showSocialButtons}>\n              <SocialButtons />\n            </ScaleFade>\n            <ScaleFade initialScale={0.9} in={showContactButton}>\n              <Button colorScheme=\"blue\" size=\"lg\" mt={10} onClick={() => contactRef.current.scrollIntoView({ behavior: 'smooth', block: 'start' })}>\n                Contact\n              </Button>\n            </ScaleFade>\n          </Box>\n        </Center>\n        <Box h={[null, null, \"100vh\"]} w={[\"100%\", \"100%\", \"60%\"]} overflowY=\"auto\">\n          <ScaleFade initialScale={0.9} in={showContent}>\n            <Skills />\n            <Projects />\n            <Contact ref={contactRef} />\n          </ScaleFade>\n        </Box>\n      </Stack>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}